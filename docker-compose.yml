version: '3.8'

services:
  # PostgreSQL database service
  db:
    image: postgres:15
    container_name: gogo-main-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: shop_inventory
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - gogo-net

  # pgAdmin 4 service
  pgadmin:
    image: dpage/pgadmin4
    container_name: gogo-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - gogo-net

  # Main Backend service
  backend:
    build:
      context: ./backend
    container_name: gogo-backend
    restart: unless-stopped
    ports:
      - "5001:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:12345678@db:5432/shop_inventory
    depends_on:
      - db
    networks:
      - gogo-net

  # Main Frontend service
  frontend:
    image: rani19/gogo-main-frontend:latest
    container_name: gogo-main-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://gogo-backend:5000/api
    networks:
      - gogo-net

  # DR Backend service
  dr-backend:
    image: rani19/backend:latest
    container_name: gogo-dr-backend
    restart: unless-stopped
    ports:
      - "5002:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:12345678@db:5432/shop_inventory
    networks:
      - gogo-net

  # DR Frontend service
  dr-frontend:
    image: rani19/gogo-main-frontend:latest
    container_name: gogo-dr-frontend
    restart: unless-stopped
    ports:
      - "3002:80"
    environment:
      - VITE_API_URL=http://gogo-dr-backend:5000/api
    networks:
      - gogo-net

volumes:
  pgdata:
  pgadmin-data:

networks:
  gogo-net:
    external: true